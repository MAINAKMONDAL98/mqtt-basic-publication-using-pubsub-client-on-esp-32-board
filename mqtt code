//https://github.com/MAINAKMONDAL98
#include <WiFi.h>
#include <PubSubClient.h>
#include "DHT.h"
//here we use 14 of ESP32 to read data
#define DHTPIN 14
//our sensor is DHT11 type
#define DHTTYPE DHT22
//create an instance of DHT sensor
DHT dht(DHTPIN, DHTTYPE);
//calculating time
unsigned long int t;
 
const char* ssid = "your ssid name";//fill
const char* password =  "your ssid password";//fill
const char* mqttServer = "your server ip";//fill
const int mqttPort = your port;//fill
const char* mqttUser = "";//fill if you have or leave blank
const char* mqttPassword = "";//fill if you have or leave blank
 
WiFiClient espClient;
PubSubClient client(espClient);
 
void setup() {
 
  Serial.begin(115200);
  Serial.println("DHT11 sensor!");
  //call begin to start sensor
  dht.begin();
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("Connecting to WiFi..");
  }
 
  Serial.println("Connected to the WiFi network");
 
  client.setServer(mqttServer, mqttPort);
 
  while (!client.connected()) {
    Serial.println("Connecting to MQTT...");
 
    if (client.connect("ESP32Client", mqttUser, mqttPassword )) {
 
      Serial.println("connected");
 
    } else {
 
      Serial.print("failed with state ");
      Serial.print(client.state());
      delay(2000);
 
    }
  }
 
  client.publish("your topic name", "your messege");//fill
 
}
 
void loop() {
  client.loop();
  //use the functions which are supplied by library.
float h = dht.readHumidity();
// Read temperature as Celsius (the default)
float t = dht.readTemperature();
// Check if any reads failed and exit early (to try again).
if (isnan(h) || isnan(t)) {
Serial.println("Failed to read from DHT sensor!");
return;
}
// print the result to Terminal
Serial.print("Humidity: ");
Serial.print(h);
Serial.print(" %\t");
Serial.print("Temperature: ");
Serial.print(t);
Serial.println(" *C ");
//we delay a little bit for next read
delay(2000);
  char d[8];
  //coverting to string
  dtostrf(t, 5, 2, d);
   client.publish("your topic name", d);//fill
   delay(1000);
   char f[8];
  dtostrf(h, 5, 2, f);
   client.publish("your topic name", f);//fill
  }
